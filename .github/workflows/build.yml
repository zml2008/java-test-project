name: "build"

'on':
  push:
    branches: "**"
    tags-ignore: ["**"]
  pull-request:

concurrency:
  group: "${{ github.workflow }}-${{ github.event.number || github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    # Only run on PRs if the source branch is on someone else's repo
    if: "${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}"
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    runs-on: "${{ matrix.os }}"
    steps:
      - name: "checkout repository"
        uses: "actions/checkout@v2"
      - name: "setup jdk 11"
        uses: "actions/setup-java@v2"
        with:
          distribution: "temurin"
          java-version: "11"
      - name: "Run Gradle build"
        uses: "gradle/gradle-build-action@v2"
        with:
          cache-read-only: "${{ github.ref != 'refs/heads/trunk' || github.event_name == 'pull_request' }}"
          arguments: build
      - name: "Archive test results"
        if: "${{ always() }}"
        uses: "actions/upload-artifact@v2"
        with:
          name: "test-results"
          path: |
            build/reports/
            */build/reports/
      - name: Determine status
        if: "${{ runner.os == 'Linux' }}"
        run: |
          if [ "$(./gradlew properties | awk '/^version:/ { print $2; }' | grep '\-SNAPSHOT')" ]; then
            echo "STATUS=snapshot" >> $GITHUB_ENV
          else
            echo "STATUS=release" >> $GITHUB_ENV
          fi
      - name: "publish"
        if: "${{ runner.os == 'Linux' && env.STATUS != 'release' && github.event_name == 'push' && github.ref == 'refs/heads/trunk' }}"
        uses: "gradle/gradle-build-action@v2"
        with:
          arguments: publish
        env:
          ORG_GRADLE_PROJECT_stellardriftUsername: "${{ secrets.SONATYPE_USERNAME }}"
          ORG_GRADLE_PROJECT_stellardriftPassword: "${{ secrets.SONATYPE_PASSWORD }}"
